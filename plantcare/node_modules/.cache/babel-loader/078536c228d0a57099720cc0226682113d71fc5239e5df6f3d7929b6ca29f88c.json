{"ast":null,"code":"// src/api/jadwalApi.js\n// Integrasi CRUD Jadwal ke backend Pyramid\n\nconst API_BASE = 'http://localhost:6543/jadwal';\n\n// Pagination support: getJadwalList({ limit, offset })\nexport async function getJadwalList({\n  limit = 20,\n  offset = 0\n} = {}) {\n  var _data$jadwal;\n  const url = `${API_BASE}?limit=${limit}&offset=${offset}`;\n  const res = await fetch(url, {\n    credentials: 'include'\n  });\n  if (!res.ok) throw new Error('Gagal mengambil data jadwal');\n  const data = await res.json();\n  // Backend mengembalikan format: {\"jadwal\": [...], \"pagination\": {...}}\n  return {\n    jadwal: data.jadwal || [],\n    pagination: data.pagination || {\n      limit,\n      offset,\n      total: ((_data$jadwal = data.jadwal) === null || _data$jadwal === void 0 ? void 0 : _data$jadwal.length) || 0\n    }\n  };\n}\nexport async function getJadwalById(id) {\n  const res = await fetch(`${API_BASE}/${id}`, {\n    credentials: 'include'\n  });\n  if (!res.ok) throw new Error('Jadwal tidak ditemukan');\n  return res.json();\n}\nexport async function createJadwal(data) {\n  const res = await fetch(API_BASE, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error('Gagal menambah jadwal');\n  return res.json();\n}\nexport async function updateJadwal(id, data) {\n  const res = await fetch(`${API_BASE}/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error('Gagal mengupdate jadwal');\n  return res.json();\n}\nexport async function deleteJadwal(id) {\n  const res = await fetch(`${API_BASE}/${id}`, {\n    method: 'DELETE',\n    credentials: 'include'\n  });\n  if (!res.ok) throw new Error('Gagal menghapus jadwal');\n  return res.json();\n}","map":{"version":3,"names":["API_BASE","getJadwalList","limit","offset","_data$jadwal","url","res","fetch","credentials","ok","Error","data","json","jadwal","pagination","total","length","getJadwalById","id","createJadwal","method","headers","body","JSON","stringify","updateJadwal","deleteJadwal"],"sources":["C:/Users/jerem/OneDrive/Desktop/uas-pemrograman_web_122450022/plantcare/src/api/jadwalApi.js"],"sourcesContent":["// src/api/jadwalApi.js\r\n// Integrasi CRUD Jadwal ke backend Pyramid\r\n\r\nconst API_BASE = 'http://localhost:6543/jadwal';\r\n\r\n// Pagination support: getJadwalList({ limit, offset })\r\nexport async function getJadwalList({ limit = 20, offset = 0 } = {}) {\r\n  const url = `${API_BASE}?limit=${limit}&offset=${offset}`;\r\n  const res = await fetch(url, { credentials: 'include' });\r\n  if (!res.ok) throw new Error('Gagal mengambil data jadwal');\r\n  const data = await res.json();\r\n  // Backend mengembalikan format: {\"jadwal\": [...], \"pagination\": {...}}\r\n  return {\r\n    jadwal: data.jadwal || [],\r\n    pagination: data.pagination || { limit, offset, total: data.jadwal?.length || 0 }\r\n  };\r\n}\r\n\r\nexport async function getJadwalById(id) {\r\n  const res = await fetch(`${API_BASE}/${id}`, { credentials: 'include' });\r\n  if (!res.ok) throw new Error('Jadwal tidak ditemukan');\r\n  return res.json();\r\n}\r\n\r\nexport async function createJadwal(data) {\r\n  const res = await fetch(API_BASE, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    credentials: 'include',\r\n    body: JSON.stringify(data),\r\n  });\r\n  if (!res.ok) throw new Error('Gagal menambah jadwal');\r\n  return res.json();\r\n}\r\n\r\nexport async function updateJadwal(id, data) {\r\n  const res = await fetch(`${API_BASE}/${id}`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    credentials: 'include',\r\n    body: JSON.stringify(data),\r\n  });\r\n  if (!res.ok) throw new Error('Gagal mengupdate jadwal');\r\n  return res.json();\r\n}\r\n\r\nexport async function deleteJadwal(id) {\r\n  const res = await fetch(`${API_BASE}/${id}`, {\r\n    method: 'DELETE',\r\n    credentials: 'include',\r\n  });\r\n  if (!res.ok) throw new Error('Gagal menghapus jadwal');\r\n  return res.json();\r\n}\r\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,QAAQ,GAAG,8BAA8B;;AAE/C;AACA,OAAO,eAAeC,aAAaA,CAAC;EAAEC,KAAK,GAAG,EAAE;EAAEC,MAAM,GAAG;AAAE,CAAC,GAAG,CAAC,CAAC,EAAE;EAAA,IAAAC,YAAA;EACnE,MAAMC,GAAG,GAAG,GAAGL,QAAQ,UAAUE,KAAK,WAAWC,MAAM,EAAE;EACzD,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAAEG,WAAW,EAAE;EAAU,CAAC,CAAC;EACxD,IAAI,CAACF,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAC3D,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;EAC7B;EACA,OAAO;IACLC,MAAM,EAAEF,IAAI,CAACE,MAAM,IAAI,EAAE;IACzBC,UAAU,EAAEH,IAAI,CAACG,UAAU,IAAI;MAAEZ,KAAK;MAAEC,MAAM;MAAEY,KAAK,EAAE,EAAAX,YAAA,GAAAO,IAAI,CAACE,MAAM,cAAAT,YAAA,uBAAXA,YAAA,CAAaY,MAAM,KAAI;IAAE;EAClF,CAAC;AACH;AAEA,OAAO,eAAeC,aAAaA,CAACC,EAAE,EAAE;EACtC,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,IAAIkB,EAAE,EAAE,EAAE;IAAEV,WAAW,EAAE;EAAU,CAAC,CAAC;EACxE,IAAI,CAACF,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACtD,OAAOJ,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeO,YAAYA,CAACR,IAAI,EAAE;EACvC,MAAML,GAAG,GAAG,MAAMC,KAAK,CAACP,QAAQ,EAAE;IAChCoB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/Cb,WAAW,EAAE,SAAS;IACtBc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACL,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAOJ,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAea,YAAYA,CAACP,EAAE,EAAEP,IAAI,EAAE;EAC3C,MAAML,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,IAAIkB,EAAE,EAAE,EAAE;IAC3CE,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/Cb,WAAW,EAAE,SAAS;IACtBc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACL,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EACvD,OAAOJ,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAec,YAAYA,CAACR,EAAE,EAAE;EACrC,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,IAAIkB,EAAE,EAAE,EAAE;IAC3CE,MAAM,EAAE,QAAQ;IAChBZ,WAAW,EAAE;EACf,CAAC,CAAC;EACF,IAAI,CAACF,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACtD,OAAOJ,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}