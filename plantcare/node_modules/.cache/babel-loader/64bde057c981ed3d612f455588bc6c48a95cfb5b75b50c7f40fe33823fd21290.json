{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerem\\\\OneDrive\\\\Desktop\\\\uas-pemrograman_web_122450022\\\\plantcare\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { login as apiLogin, logout as apiLogout } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error(\"Error parsing stored user:\", error);\n        localStorage.removeItem(\"user\");\n      }\n    }\n  }, []);\n  const login = async (username, password) => {\n    setIsLoading(true);\n    try {\n      const response = await apiLogin(username, password);\n      if (response.status === \"success\") {\n        const newUser = {\n          username: response.user,\n          loginTime: new Date().toISOString()\n        };\n        setUser(newUser);\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n        return {\n          success: true,\n          user: newUser\n        };\n      } else {\n        throw new Error(response.msg || \"Login failed\");\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = async () => {\n    setIsLoading(true);\n    try {\n      if (user !== null && user !== void 0 && user.username) {\n        await apiLogout(user.username);\n      }\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n      // Continue with local logout even if API call fails\n    } finally {\n      setUser(null);\n      localStorage.removeItem(\"user\");\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"mNeCcSUdkuZSbl/YJwRRwadhE2I=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","login","apiLogin","logout","apiLogout","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","storedUser","localStorage","getItem","JSON","parse","error","console","removeItem","username","password","response","status","newUser","loginTime","Date","toISOString","setItem","stringify","success","Error","msg","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/jerem/OneDrive/Desktop/uas-pemrograman_web_122450022/plantcare/src/context/AuthContext.jsx"],"sourcesContent":["// src/context/AuthContext.js\r\nimport { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { login as apiLogin, logout as apiLogout } from \"../services/api\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    if (storedUser) {\r\n      try {\r\n        setUser(JSON.parse(storedUser));\r\n      } catch (error) {\r\n        console.error(\"Error parsing stored user:\", error);\r\n        localStorage.removeItem(\"user\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await apiLogin(username, password);\r\n      \r\n      if (response.status === \"success\") {\r\n        const newUser = { \r\n          username: response.user,\r\n          loginTime: new Date().toISOString()\r\n        };\r\n        setUser(newUser);\r\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\r\n        return { success: true, user: newUser };\r\n      } else {\r\n        throw new Error(response.msg || \"Login failed\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      if (user?.username) {\r\n        await apiLogout(user.username);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n      // Continue with local logout even if API call fails\r\n    } finally {\r\n      setUser(null);\r\n      localStorage.removeItem(\"user\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, isLoading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}