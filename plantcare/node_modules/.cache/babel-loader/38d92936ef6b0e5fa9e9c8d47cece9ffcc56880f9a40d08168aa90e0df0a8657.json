{"ast":null,"code":"// Dashboard API client for PlantCare application\nconst API_BASE = 'http://localhost:6543/dashboard';\nexport const getDashboardSummary = async () => {\n  try {\n    const response = await fetch(API_BASE, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log('Dashboard API response:', data);\n    return {\n      totalTanaman: data.totalTanaman || 0,\n      totalJadwal: data.totalJadwal || 0,\n      totalJadwalHariIni: data.totalJadwalHariIni || 0,\n      recentPlants: data.recentPlants || [],\n      upcomingSchedules: data.upcomingSchedules || [],\n      plantStats: data.plantStats || [],\n      systemStatus: data.systemStatus || {}\n    };\n  } catch (error) {\n    console.error('Error fetching dashboard summary:', error);\n    // Return fallback data if API fails\n    return {\n      totalTanaman: 0,\n      totalJadwal: 0,\n      totalJadwalHariIni: 0,\n      recentPlants: [],\n      upcomingSchedules: [],\n      plantStats: [],\n      systemStatus: {\n        status: 'offline'\n      },\n      error: error.message\n    };\n  }\n};","map":{"version":3,"names":["API_BASE","getDashboardSummary","response","fetch","method","headers","ok","Error","status","data","json","console","log","totalTanaman","totalJadwal","totalJadwalHariIni","recentPlants","upcomingSchedules","plantStats","systemStatus","error","message"],"sources":["C:/Users/jerem/OneDrive/Desktop/uas-pemrograman_web_122450022/plantcare/src/api/dashboardApi.js"],"sourcesContent":["// Dashboard API client for PlantCare application\r\nconst API_BASE = 'http://localhost:6543/dashboard';\r\n\r\nexport const getDashboardSummary = async () => {\r\n  try {\r\n    const response = await fetch(API_BASE, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('Dashboard API response:', data);\r\n    \r\n    return {\r\n      totalTanaman: data.totalTanaman || 0,\r\n      totalJadwal: data.totalJadwal || 0,\r\n      totalJadwalHariIni: data.totalJadwalHariIni || 0,\r\n      recentPlants: data.recentPlants || [],\r\n      upcomingSchedules: data.upcomingSchedules || [],\r\n      plantStats: data.plantStats || [],\r\n      systemStatus: data.systemStatus || {}\r\n    };\r\n  } catch (error) {\r\n    console.error('Error fetching dashboard summary:', error);\r\n    // Return fallback data if API fails\r\n    return {\r\n      totalTanaman: 0,\r\n      totalJadwal: 0,\r\n      totalJadwalHariIni: 0,\r\n      recentPlants: [],\r\n      upcomingSchedules: [],\r\n      plantStats: [],\r\n      systemStatus: { status: 'offline' },\r\n      error: error.message\r\n    };\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,iCAAiC;AAElD,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,EAAE;MACrCI,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBL,QAAQ,CAACM,MAAM,EAAE,CAAC;IAC3D;IAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,IAAI,CAAC;IAE5C,OAAO;MACLI,YAAY,EAAEJ,IAAI,CAACI,YAAY,IAAI,CAAC;MACpCC,WAAW,EAAEL,IAAI,CAACK,WAAW,IAAI,CAAC;MAClCC,kBAAkB,EAAEN,IAAI,CAACM,kBAAkB,IAAI,CAAC;MAChDC,YAAY,EAAEP,IAAI,CAACO,YAAY,IAAI,EAAE;MACrCC,iBAAiB,EAAER,IAAI,CAACQ,iBAAiB,IAAI,EAAE;MAC/CC,UAAU,EAAET,IAAI,CAACS,UAAU,IAAI,EAAE;MACjCC,YAAY,EAAEV,IAAI,CAACU,YAAY,IAAI,CAAC;IACtC,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdT,OAAO,CAACS,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD;IACA,OAAO;MACLP,YAAY,EAAE,CAAC;MACfC,WAAW,EAAE,CAAC;MACdC,kBAAkB,EAAE,CAAC;MACrBC,YAAY,EAAE,EAAE;MAChBC,iBAAiB,EAAE,EAAE;MACrBC,UAAU,EAAE,EAAE;MACdC,YAAY,EAAE;QAAEX,MAAM,EAAE;MAAU,CAAC;MACnCY,KAAK,EAAEA,KAAK,CAACC;IACf,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}